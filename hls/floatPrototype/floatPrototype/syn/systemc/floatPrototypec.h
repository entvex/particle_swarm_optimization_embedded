// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _floatPrototypec_HH_
#define _floatPrototypec_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "floatPrototypec_multiply.h"

namespace ap_rtl {

struct floatPrototypec : public sc_module {
    // Port declarations 5
    sc_in_clk clk;
    sc_in< sc_logic > reset;
    sc_in< sc_lv<32> > float1;
    sc_in< sc_lv<32> > float2;
    sc_out< sc_lv<32> > float3;


    // Module declarations
    floatPrototypec(sc_module_name name);
    SC_HAS_PROCESS(floatPrototypec);

    ~floatPrototypec();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    floatPrototypec_multiply* grp_floatPrototypec_multiply_fu_60;
    sc_signal< sc_lv<1> > floatPrototypec_s_load_fu_74_p1;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_lv<32> > grp_floatPrototypec_multiply_fu_60_float3;
    sc_signal< sc_logic > grp_floatPrototypec_multiply_fu_60_float3_ap_vld;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_logic ap_const_logic_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_float3();
    void thread_ap_CS_fsm();
    void thread_ap_CS_fsm_state2();
    void thread_floatPrototypec_s_load_fu_74_p1();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
