// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _particlemaster_HH_
#define _particlemaster_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "particlemaster_ReadCalculations.h"
#include "particlemaster_Setup.h"

namespace ap_rtl {

struct particlemaster : public sc_module {
    // Port declarations 46
    sc_in_clk clk;
    sc_in< sc_logic > reset;
    sc_in< sc_logic > start;
    sc_out< sc_logic > maximum;
    sc_out< sc_logic > calculate;
    sc_out< sc_logic > setup;
    sc_in< sc_logic > negativeFormula;
    sc_in< sc_lv<32> > c1;
    sc_in< sc_lv<32> > c2;
    sc_out< sc_lv<32> > finalx1;
    sc_out< sc_lv<32> > finalx2;
    sc_out< sc_logic > complete;
    sc_out< sc_lv<32> > cognitive;
    sc_out< sc_lv<32> > social;
    sc_out< sc_lv<32> > x1_global;
    sc_out< sc_lv<32> > x2_global;
    sc_in< sc_lv<32> > x1_p1;
    sc_in< sc_lv<32> > x2_p1;
    sc_in< sc_logic > ready_p1;
    sc_in< sc_lv<32> > x1_p2;
    sc_in< sc_lv<32> > x2_p2;
    sc_in< sc_logic > ready_p2;
    sc_in< sc_lv<32> > x1_p3;
    sc_in< sc_lv<32> > x2_p3;
    sc_in< sc_logic > ready_p3;
    sc_in< sc_lv<32> > x1_p4;
    sc_in< sc_lv<32> > x2_p4;
    sc_in< sc_logic > ready_p4;
    sc_in< sc_lv<32> > x1_p5;
    sc_in< sc_lv<32> > x2_p5;
    sc_in< sc_logic > ready_p5;
    sc_in< sc_lv<32> > x1_p6;
    sc_in< sc_lv<32> > x2_p6;
    sc_in< sc_logic > ready_p6;
    sc_in< sc_lv<32> > x1_p7;
    sc_in< sc_lv<32> > x2_p7;
    sc_in< sc_logic > ready_p7;
    sc_in< sc_lv<32> > x1_p8;
    sc_in< sc_lv<32> > x2_p8;
    sc_in< sc_logic > ready_p8;
    sc_in< sc_lv<32> > x1_p9;
    sc_in< sc_lv<32> > x2_p9;
    sc_in< sc_logic > ready_p9;
    sc_in< sc_lv<32> > x1_p10;
    sc_in< sc_lv<32> > x2_p10;
    sc_in< sc_logic > ready_p10;


    // Module declarations
    particlemaster(sc_module_name name);
    SC_HAS_PROCESS(particlemaster);

    ~particlemaster();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    particlemaster_ReadCalculations* grp_particlemaster_ReadCalculations_fu_254;
    particlemaster_Setup* grp_particlemaster_Setup_fu_384;
    sc_signal< sc_lv<1> > particlemaster_ss_load_fu_490_p1;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > grp_particlemaster_ReadCalculations_fu_254_calculate;
    sc_signal< sc_logic > grp_particlemaster_ReadCalculations_fu_254_calculate_ap_vld;
    sc_signal< sc_lv<32> > grp_particlemaster_ReadCalculations_fu_254_finalx1;
    sc_signal< sc_logic > grp_particlemaster_ReadCalculations_fu_254_finalx1_ap_vld;
    sc_signal< sc_lv<32> > grp_particlemaster_ReadCalculations_fu_254_finalx2;
    sc_signal< sc_logic > grp_particlemaster_ReadCalculations_fu_254_finalx2_ap_vld;
    sc_signal< sc_logic > grp_particlemaster_ReadCalculations_fu_254_complete;
    sc_signal< sc_logic > grp_particlemaster_ReadCalculations_fu_254_complete_ap_vld;
    sc_signal< sc_lv<32> > grp_particlemaster_ReadCalculations_fu_254_x1_global;
    sc_signal< sc_logic > grp_particlemaster_ReadCalculations_fu_254_x1_global_ap_vld;
    sc_signal< sc_lv<32> > grp_particlemaster_ReadCalculations_fu_254_x2_global;
    sc_signal< sc_logic > grp_particlemaster_ReadCalculations_fu_254_x2_global_ap_vld;
    sc_signal< sc_lv<32> > grp_particlemaster_ReadCalculations_fu_254_particlemaster_x1_best_o;
    sc_signal< sc_logic > grp_particlemaster_ReadCalculations_fu_254_particlemaster_x1_best_o_ap_vld;
    sc_signal< sc_lv<32> > grp_particlemaster_ReadCalculations_fu_254_particlemaster_x2_best_o;
    sc_signal< sc_logic > grp_particlemaster_ReadCalculations_fu_254_particlemaster_x2_best_o_ap_vld;
    sc_signal< sc_logic > grp_particlemaster_ReadCalculations_fu_254_particlemaster_negFormula;
    sc_signal< sc_lv<32> > grp_particlemaster_ReadCalculations_fu_254_particlemaster_iterations_o;
    sc_signal< sc_logic > grp_particlemaster_ReadCalculations_fu_254_particlemaster_iterations_o_ap_vld;
    sc_signal< sc_logic > grp_particlemaster_Setup_fu_384_maximum;
    sc_signal< sc_logic > grp_particlemaster_Setup_fu_384_maximum_ap_vld;
    sc_signal< sc_logic > grp_particlemaster_Setup_fu_384_setup;
    sc_signal< sc_logic > grp_particlemaster_Setup_fu_384_setup_ap_vld;
    sc_signal< sc_lv<32> > grp_particlemaster_Setup_fu_384_cognitive;
    sc_signal< sc_logic > grp_particlemaster_Setup_fu_384_cognitive_ap_vld;
    sc_signal< sc_lv<32> > grp_particlemaster_Setup_fu_384_social;
    sc_signal< sc_logic > grp_particlemaster_Setup_fu_384_social_ap_vld;
    sc_signal< sc_logic > grp_particlemaster_Setup_fu_384_particlemaster_setupDone_i;
    sc_signal< sc_logic > grp_particlemaster_Setup_fu_384_particlemaster_setupDone_o;
    sc_signal< sc_logic > grp_particlemaster_Setup_fu_384_particlemaster_setupDone_o_ap_vld;
    sc_signal< sc_logic > grp_particlemaster_Setup_fu_384_particlemaster_negFormula;
    sc_signal< sc_logic > grp_particlemaster_Setup_fu_384_particlemaster_negFormula_ap_vld;
    sc_signal< sc_lv<32> > grp_particlemaster_Setup_fu_384_particlemaster_iterations;
    sc_signal< sc_logic > grp_particlemaster_Setup_fu_384_particlemaster_iterations_ap_vld;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > particlemaster_setupDone;
    sc_signal< sc_lv<32> > particlemaster_x1_best;
    sc_signal< sc_lv<32> > particlemaster_x2_best;
    sc_signal< sc_lv<1> > particlemaster_negFormula;
    sc_signal< sc_lv<32> > particlemaster_iterations;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_logic ap_const_logic_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_calculate();
    void thread_cognitive();
    void thread_complete();
    void thread_finalx1();
    void thread_finalx2();
    void thread_maximum();
    void thread_particlemaster_iterations();
    void thread_particlemaster_negFormula();
    void thread_particlemaster_setupDone();
    void thread_particlemaster_x1_best();
    void thread_particlemaster_x2_best();
    void thread_setup();
    void thread_social();
    void thread_x1_global();
    void thread_x2_global();
    void thread_ap_CS_fsm();
    void thread_ap_CS_fsm_state2();
    void thread_grp_particlemaster_ReadCalculations_fu_254_particlemaster_negFormula();
    void thread_grp_particlemaster_Setup_fu_384_particlemaster_setupDone_i();
    void thread_particlemaster_ss_load_fu_490_p1();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
